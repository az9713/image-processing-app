name: Deploy Image Processing App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci || npm install
        fi
        
    - name: Download HEIF library
      run: |
        curl -f -o lib/heic2any.min.js https://cdn.jsdelivr.net/npm/heic2any@0.0.4/dist/heic2any.min.js || echo "HEIF library download failed, but continuing..."
        
    - name: Verify project structure
      run: |
        echo "📁 Project Structure:"
        ls -la
        echo ""
        echo "📄 Core Files:"
        ls -la index.html css/ js/ lib/ || true
        echo ""
        echo "🖼️ Sample Images:"
        ls -la images/ | head -10 || true
        
    - name: Test application files
      run: |
        echo "🔍 Verifying core application files..."
        test -f index.html || (echo "❌ Missing index.html" && exit 1)
        test -f css/styles.css || (echo "❌ Missing styles.css" && exit 1)
        test -f js/app.js || (echo "❌ Missing app.js" && exit 1)
        test -f js/formatHandler.js || (echo "❌ Missing formatHandler.js" && exit 1)
        test -f js/imageProcessor.js || (echo "❌ Missing imageProcessor.js" && exit 1)
        test -f js/processingPipeline.js || (echo "❌ Missing processingPipeline.js" && exit 1)
        test -f js/uiController.js || (echo "❌ Missing uiController.js" && exit 1)
        echo "✅ All core files present"
        
    - name: Validate HTML
      run: |
        echo "🔍 Basic HTML validation..."
        grep -q "<!DOCTYPE html>" index.html && echo "✅ DOCTYPE found" || echo "⚠️ DOCTYPE missing"
        grep -q "<title>" index.html && echo "✅ Title found" || echo "⚠️ Title missing"
        grep -q "Image Processing Application" index.html && echo "✅ App title found" || echo "⚠️ App title missing"
        
    - name: Check JavaScript syntax
      run: |
        echo "🔍 Basic JavaScript syntax check..."
        for js_file in js/*.js; do
          if [ -f "$js_file" ]; then
            echo "Checking $js_file..."
            node -c "$js_file" && echo "✅ $js_file syntax OK" || echo "❌ $js_file has syntax errors"
          fi
        done
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github,node_modules,.gitignore'
        
    - name: Create deployment summary
      if: github.ref == 'refs/heads/main'
      run: |
        echo "🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "===================" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status**: Successfully deployed" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🌐 **Live URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Features Available:" >> $GITHUB_STEP_SUMMARY
        echo "- Multi-format image support (JPEG, PNG, BMP, GIF, SVG, WebP, HEIF)" >> $GITHUB_STEP_SUMMARY
        echo "- Real-time quality compression" >> $GITHUB_STEP_SUMMARY
        echo "- Image rotation (90°, 180°, 270°)" >> $GITHUB_STEP_SUMMARY
        echo "- Processing pipeline with undo/redo" >> $GITHUB_STEP_SUMMARY
        echo "- Side-by-side comparison" >> $GITHUB_STEP_SUMMARY
        echo "- Drag & drop file upload" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Project Stats:" >> $GITHUB_STEP_SUMMARY
        echo "- **Files deployed**: $(find . -type f -name '*.html' -o -name '*.css' -o -name '*.js' | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **Sample images**: $(find images -name '*.JPG' 2>/dev/null | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **Total size**: $(du -sh . | cut -f1)" >> $GITHUB_STEP_SUMMARY